# Generated by Django 4.0.4 on 2022-05-25 11:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('owner', 'owner'), ('recondition', 'recondition'), ('customer', 'customer')], default='owner', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Recondition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.BigIntegerField(null=True)),
                ('recondition_name', models.CharField(max_length=200)),
                ('Temporary_address', models.CharField(max_length=300)),
                ('street', models.CharField(max_length=200)),
                ('District', models.CharField(default='Kathmandu', max_length=50)),
                ('profile_pic', models.ImageField(blank=True, upload_to='Recondition')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=100)),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('renew_at', models.DateTimeField(blank=True)),
                ('expire_on', models.DateField()),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('cost_price', models.IntegerField()),
                ('plate_no', models.CharField(max_length=50)),
                ('maintainance_cost', models.IntegerField(blank=True)),
                ('maintainance_detail', models.CharField(blank=True, max_length=500)),
                ('purchase_date', models.DateField(blank=True)),
                ('sold_date', models.DateField(blank=True)),
                ('showing_price', models.IntegerField()),
                ('sold_status', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, upload_to='vehicle')),
                ('sold_price', models.IntegerField(blank=True)),
                ('remarks', models.CharField(max_length=1000)),
                ('book_no', models.CharField(max_length=200)),
                ('insurance', models.CharField(max_length=1000)),
                ('run_km', models.IntegerField()),
                ('modal', models.CharField(blank=True, max_length=200)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='vehicle_category', to='recon.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_vehicle', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sales', models.BigIntegerField(blank=True)),
                ('purchase', models.BigIntegerField(blank=True)),
                ('recondition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recondition_transaction', to='recon.recondition')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vechile_transaction', to='recon.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.IntegerField()),
                ('reason', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('recondition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recondition_expenses', to='recon.recondition')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.BigIntegerField(null=True)),
                ('Temporary_address', models.CharField(max_length=300)),
                ('street', models.CharField(max_length=200)),
                ('District', models.CharField(max_length=50)),
                ('profile_pic', models.ImageField(blank=True, upload_to='Customer_Profile')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
